import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { formatCurrency } from "../utils/promptpay";

const ProductCard = ({ product, onAddToCart }) => {
  const navigate = useNavigate();
  const [imageError, setImageError] = useState(false);
  const [imageLoading, setImageLoading] = useState(true);

  const handleImageLoad = () => setImageLoading(false);
  const handleImageError = () => {
    setImageError(true);
    setImageLoading(false);
  };

  const getImageUrl = () => {
    if (imageError || !product.image_url) {
      return "/images/no-image.png";
    }

    if (product.image_url.startsWith("http")) {
      return product.image_url;
    }

    return `http://localhost:3001${product.image_url}`;
  };

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å
  const stockQuantity = product.stock_quantity || 0;
  const isOutOfStock = stockQuantity <= 0;
  const isLowStock = stockQuantity > 0 && stockQuantity <= 5;

  // ‚úÖ ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Add to Cart ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å
  const handleAddToCart = () => {
    if (isOutOfStock) {
      alert(`‚ùå ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "${product.name}" ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß`);
      return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏µ‡πà‡∏ä‡∏¥‡πâ‡∏ô
    const existingCart = JSON.parse(localStorage.getItem("cart") || "[]");
    const existingItem = existingCart.find((item) => item.id === product.id);
    const currentInCart = existingItem ? existingItem.quantity : 0;

    if (currentInCart >= stockQuantity) {
      alert(
        `‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å\n‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "${product.name}" ‡∏°‡∏µ‡πÉ‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${stockQuantity} ‡∏ä‡∏¥‡πâ‡∏ô\n‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß ${currentInCart} ‡∏ä‡∏¥‡πâ‡∏ô`
      );
      return;
    }

    if (onAddToCart) {
      onAddToCart(product);
    }
  };

  const handleViewDetails = () => {
    navigate(`/products/${product.id}`);
  };

  return (
    <div className="product-card">
      {/* Product Image */}
      <div className="product-image">
        {imageLoading && (
          <div className="image-loading">
            <div className="loading-spinner"></div>
          </div>
        )}

        <img
          src={getImageUrl()}
          alt={product.name}
          onLoad={handleImageLoad}
          onError={handleImageError}
          style={{ display: imageLoading ? "none" : "block" }}
        />

        {/* Stock Badge */}
        {isOutOfStock && (
          <div className="stock-badge out-of-stock">‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å</div>
        )}
        {isLowStock && <div className="stock-badge low-stock">‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢</div>}
      </div>

      {/* Product Info */}
      <div className="product-info">
        <h3 className="product-name">{product.name}</h3>

        <div className="product-details">
          <div className="product-price">{formatCurrency(product.price)}</div>

          {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å */}
          <div className="product-stock">
            {isOutOfStock ? (
              <span className="stock-status out-of-stock">‚ùå ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å</span>
            ) : isLowStock ? (
              <span className="stock-status low-stock">
                ‚ö†Ô∏è ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {stockQuantity} ‡∏ä‡∏¥‡πâ‡∏ô
              </span>
            ) : (
              <span className="stock-status in-stock">
                ‚úÖ ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ({stockQuantity} ‡∏ä‡∏¥‡πâ‡∏ô)
              </span>
            )}
          </div>

          {product.category_name && (
            <div className="product-category">üìÇ {product.category_name}</div>
          )}
        </div>

        {/* Action Buttons */}
        <div className="product-actions">
          {/* ‚úÖ ‡πÉ‡∏ä‡πâ React Router Navigation */}
          <button
            className="btn btn-outline btn-sm"
            onClick={handleViewDetails}
          >
            üëÅÔ∏è ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
          </button>

          {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏° Add to Cart ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å */}
          <button
            className={`btn btn-sm ${
              isOutOfStock ? "btn-disabled" : "btn-primary"
            }`}
            onClick={handleAddToCart}
            disabled={isOutOfStock}
          >
            {isOutOfStock ? "‚ùå ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å" : "üõí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤"}
          </button>
        </div>
      </div>
    </div>
  );
};

export default ProductCard;
